# /* vim: set filetype=nginx : */
################################################################################
##                                                                            ##
## Proxy Cache                                                                ##
##                                                                            ##
################################################################################

proxy_cache_path /var/lib/nginx/proxy
    levels=1:2 keys_zone=proxy:16m inactive=1M max_size=25G;

map $http_host $remote_server_url {
    default "https://$http_host$request_uri";
      'localhost' 'https://example.com';
}

map $http_host $remote_server_name {
    hostnames;
    default $http_host;
      'localhost' 'example.com';
}

map $arg_url $remote_uri_host {
    default "";
    "~*^https\:\/\/(?P<url_input>[^/]+)" $url_input;
}

server {
    listen 8083 default_server;

    include /etc/nginx/cache.conf;

    proxy_temp_path /var/lib/nginx/proxy/tmp;
    proxy_pass_request_headers on;

    set $component "proxy";

    location / {
        proxy_cache proxy;
        proxy_set_header Host $http_host;
        proxy_ssl_name $remote_server_name;
        proxy_cache_key $http_host/$request_uri/$http_accept_encoding;

        proxy_cache_valid any 8h;
        proxy_cache_valid 404 1m;

        proxy_pass $remote_server_url;
    }

    location = /url-proxy {
        if ($arg_url !~ "^https://.+$") { return 404; }
        if ($remote_uri_host = "") { return 404; }

        proxy_cache proxy;
        proxy_set_header Host $remote_uri_host;
        proxy_ssl_name $remote_uri_host;
        proxy_cache_key "$remote_uri_host/$arg_url/$http_accept_encoding";

        proxy_cache_valid any 8h;
        proxy_cache_valid 404 1m;

        proxy_pass $arg_url;
    }
}
