hostnames:
  - supercacher.steq.it

service:
  type: ClusterIP
  port: 8080
  clusterIP: "None"
  annotations: {}

image:
  pullPolicy: Always
  tag: main
  repository: 129317782449.dkr.ecr.eu-west-1.amazonaws.com/supercacher

replicaCount: 3

affinity: {}
imagePullSecrets: []
nodeSelector: {}
tolerations: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podDisruptionBudget: {}
extraEnv: []
# - name:  some_env_var
#   value: some value

podSecurityContext:
  fsGroup: 101
  runAsUser: 101
  runAsGroup: 101

securityContext:
  capabilities:
    drop:
    - ALL
    - CAP_NET_RAW
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  rules: []

livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 30
  failureThreshold: 6

readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 3
  periodSeconds: 5

startupProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 5

resources:
  requests:
    memory: 128M
    cpu: 200m
    ephemeral-storage: "15Gi"
  limits:
    memory: 512M
    cpu: 400m
    ephemeral-storage: "20Gi"

ingress:
  enabled: true
  class: internal-ingress-nginx
  cert_issuer: ""
  annotations: {}

existingSecrets: []
# - name: someSecret

datadog:
  enabled: false
  mountPath: /var/run/datadog
  unifiedServiceTagging: false


## Persist data to a persistent volume
persistence:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "-"
  accessMode: ReadWriteOnce
  size: 8Gi
  annotations: {}
